/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salinometer;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author pena
 */
public class mainView extends javax.swing.JFrame {
    
    
    
    

    /**
     * Creates new form mainView
     */
    public mainView() {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("resources/saltbottle.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jDialog1 = new javax.swing.JDialog();
        mainJPanel = new javax.swing.JPanel();
        autosalConnectJButtonWithIcon = new javax.swing.JButton();
        mainJScrollPane = new javax.swing.JScrollPane();
        mainJTable = new javax.swing.JTable();
        autosalConnectJButton = new javax.swing.JButton();
        mainMenuJToolBar = new javax.swing.JToolBar();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        fileNewJButton = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        fileOpenJButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        printPageJButton = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        runDetailsJButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        calibrateJButton = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        functionSwitchStatusJTextField = new javax.swing.JTextField();
        timeJTextField = new javax.swing.JTextField();
        dateJTextField = new javax.swing.JTextField();
        salinometerJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        NewJMenuItem = new javax.swing.JMenuItem();
        OpenJMenuItem = new javax.swing.JMenuItem();
        closeJMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        printJMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        runDetailsJMenuItem = new javax.swing.JMenuItem();
        calibrateJMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        exitJMenuItem = new javax.swing.JMenuItem();
        loggingJMenu = new javax.swing.JMenu();
        communicationsLogJMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        enterBottleLabelJMenuItem = new javax.swing.JMenuItem();
        enterCommentsJMenuItem = new javax.swing.JMenuItem();
        settingsJMenu = new javax.swing.JMenu();
        generalJMenuItem = new javax.swing.JMenuItem();
        communicationsJMenuItem = new javax.swing.JMenuItem();
        columnsJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        technicalHelpJMenuItem = new javax.swing.JMenuItem();
        licenseAgreementJMenuItem = new javax.swing.JMenuItem();
        aboutJMenuItem = new javax.swing.JMenuItem();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AOML Salinometer Data Logger");
        setPreferredSize(new java.awt.Dimension(800, 600));

        mainJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainJPanel.setMaximumSize(new java.awt.Dimension(80, 112));
        mainJPanel.setMinimumSize(new java.awt.Dimension(25, 25));

        autosalConnectJButtonWithIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salinometerConnectionNotConnected.png"))); // NOI18N
        autosalConnectJButtonWithIcon.setBorder(null);
        autosalConnectJButtonWithIcon.setBorderPainted(false);

        javax.swing.GroupLayout mainJPanelLayout = new javax.swing.GroupLayout(mainJPanel);
        mainJPanel.setLayout(mainJPanelLayout);
        mainJPanelLayout.setHorizontalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
            .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainJPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(autosalConnectJButtonWithIcon)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        mainJPanelLayout.setVerticalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
            .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainJPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(autosalConnectJButtonWithIcon)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        mainJScrollPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainJScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        mainJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sample ID", "Bottle Label", "Date/Time", "Bath Temp", "Uncorr Ratio", "Uncorrected Ratio SD", "Correction", "Adj Ratio", "Calc Salinity", "Calc Salinity SD", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainJTable.getTableHeader().setReorderingAllowed(false);
        mainJScrollPane.setViewportView(mainJTable);
        if (mainJTable.getColumnModel().getColumnCount() > 0) {
            mainJTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            mainJTable.getColumnModel().getColumn(1).setPreferredWidth(120);
            mainJTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            mainJTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            mainJTable.getColumnModel().getColumn(4).setPreferredWidth(120);
            mainJTable.getColumnModel().getColumn(5).setPreferredWidth(160);
            mainJTable.getColumnModel().getColumn(6).setPreferredWidth(120);
            mainJTable.getColumnModel().getColumn(7).setPreferredWidth(120);
            mainJTable.getColumnModel().getColumn(8).setPreferredWidth(150);
            mainJTable.getColumnModel().getColumn(9).setPreferredWidth(160);
            mainJTable.getColumnModel().getColumn(10).setPreferredWidth(150);
        }

        autosalConnectJButton.setText("Connect");

        mainMenuJToolBar.setBorder(null);
        mainMenuJToolBar.setFloatable(false);
        mainMenuJToolBar.setRollover(true);
        mainMenuJToolBar.add(jSeparator10);

        fileNewJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filenew.png"))); // NOI18N
        fileNewJButton.setToolTipText("New Run");
        fileNewJButton.setBorder(null);
        fileNewJButton.setFocusable(false);
        fileNewJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fileNewJButton.setMaximumSize(new java.awt.Dimension(32, 32));
        fileNewJButton.setMinimumSize(new java.awt.Dimension(32, 32));
        fileNewJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mainMenuJToolBar.add(fileNewJButton);
        mainMenuJToolBar.add(jSeparator5);

        fileOpenJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileopen.png"))); // NOI18N
        fileOpenJButton.setBorder(null);
        fileOpenJButton.setFocusable(false);
        fileOpenJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fileOpenJButton.setMaximumSize(new java.awt.Dimension(32, 32));
        fileOpenJButton.setMinimumSize(new java.awt.Dimension(32, 32));
        fileOpenJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mainMenuJToolBar.add(fileOpenJButton);
        mainMenuJToolBar.add(jSeparator6);

        printPageJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileprint.png"))); // NOI18N
        printPageJButton.setBorder(null);
        printPageJButton.setFocusable(false);
        printPageJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        printPageJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mainMenuJToolBar.add(printPageJButton);
        mainMenuJToolBar.add(jSeparator7);

        runDetailsJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/properties.png"))); // NOI18N
        runDetailsJButton.setBorder(null);
        runDetailsJButton.setFocusable(false);
        runDetailsJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runDetailsJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mainMenuJToolBar.add(runDetailsJButton);
        mainMenuJToolBar.add(jSeparator8);

        calibrateJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/flaskNobg.png"))); // NOI18N
        calibrateJButton.setBorder(null);
        calibrateJButton.setFocusable(false);
        calibrateJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        calibrateJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mainMenuJToolBar.add(calibrateJButton);
        mainMenuJToolBar.add(jSeparator9);

        jLabel1.setText("Function Switch:");

        functionSwitchStatusJTextField.setEditable(false);
        functionSwitchStatusJTextField.setText("Not Connected");
        functionSwitchStatusJTextField.setBorder(null);

        timeJTextField.setEditable(false);
        timeJTextField.setText("13:55:00 AM");
        timeJTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        timeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeJTextFieldActionPerformed(evt);
            }
        });

        dateJTextField.setEditable(false);
        dateJTextField.setText("05/17/2017");
        dateJTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        salinometerJMenuBar.setPreferredSize(new java.awt.Dimension(185, 17));

        fileJMenu.setText("File");

        NewJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NewJMenuItem.setText("New");
        NewJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(NewJMenuItem);

        OpenJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenJMenuItem.setText("Open...");
        fileJMenu.add(OpenJMenuItem);

        closeJMenuItem.setText("Close");
        fileJMenu.add(closeJMenuItem);
        fileJMenu.add(jSeparator1);

        printJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        printJMenuItem.setText("Print");
        fileJMenu.add(printJMenuItem);
        fileJMenu.add(jSeparator2);

        runDetailsJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        runDetailsJMenuItem.setText("Run Details");
        fileJMenu.add(runDetailsJMenuItem);

        calibrateJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        calibrateJMenuItem.setText("Calibrate");
        fileJMenu.add(calibrateJMenuItem);
        fileJMenu.add(jSeparator3);

        exitJMenuItem.setText("Exit");
        exitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(exitJMenuItem);

        salinometerJMenuBar.add(fileJMenu);

        loggingJMenu.setText("Logging");

        communicationsLogJMenuItem.setText("Communications Log");
        loggingJMenu.add(communicationsLogJMenuItem);
        loggingJMenu.add(jSeparator4);

        enterBottleLabelJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        enterBottleLabelJMenuItem.setText("Enter Bottle Lable");
        loggingJMenu.add(enterBottleLabelJMenuItem);

        enterCommentsJMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        enterCommentsJMenuItem.setText("Enter Comments");
        loggingJMenu.add(enterCommentsJMenuItem);

        salinometerJMenuBar.add(loggingJMenu);

        settingsJMenu.setText("Settings");

        generalJMenuItem.setText("General");
        generalJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generalJMenuItemActionPerformed(evt);
            }
        });
        settingsJMenu.add(generalJMenuItem);

        communicationsJMenuItem.setText("Communications...");
        communicationsJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communicationsJMenuItemActionPerformed(evt);
            }
        });
        settingsJMenu.add(communicationsJMenuItem);

        columnsJMenuItem.setText("Columns...");
        columnsJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                columnsJMenuItemActionPerformed(evt);
            }
        });
        settingsJMenu.add(columnsJMenuItem);

        salinometerJMenuBar.add(settingsJMenu);

        helpJMenu.setText("Help");

        technicalHelpJMenuItem.setText("Technical Help");
        helpJMenu.add(technicalHelpJMenuItem);

        licenseAgreementJMenuItem.setText("License Agreement");
        helpJMenu.add(licenseAgreementJMenuItem);

        aboutJMenuItem.setText("About...");
        helpJMenu.add(aboutJMenuItem);

        salinometerJMenuBar.add(helpJMenu);

        setJMenuBar(salinometerJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(functionSwitchStatusJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(autosalConnectJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mainMenuJToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(dateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainMenuJToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(functionSwitchStatusJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(autosalConnectJButton)
                                .addGap(30, 30, 30))))
                    .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(mainJScrollPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateJTextField)
                    .addComponent(timeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NewJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewJMenuItemActionPerformed
        // TODO add your handling code here:
        SampleRun sr = new SampleRun();
        sr.pack();
        sr.setModal(true);
        sr.setLocationRelativeTo(this);
        sr.setVisible(true);
    }//GEN-LAST:event_NewJMenuItemActionPerformed

    private void generalJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generalJMenuItemActionPerformed
        SettingsOptions so = new SettingsOptions();
        so.pack();
        so.setLocationRelativeTo(this);
        so.setModal(true);
        so.setVisible(true);

        
       
    }//GEN-LAST:event_generalJMenuItemActionPerformed

    private void communicationsJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communicationsJMenuItemActionPerformed

        CommunicationsSettings cs = new CommunicationsSettings();
        cs.pack();
        cs.setLocationRelativeTo(this);
        cs.setModal(true);
        cs.setVisible(true);
        
        
    }//GEN-LAST:event_communicationsJMenuItemActionPerformed

    private void columnsJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_columnsJMenuItemActionPerformed
        // TODO add your handling code here:        
        SelectColumns sc = new SelectColumns();
        sc.pack();
        sc.setLocationRelativeTo(this);
        sc.setModal(true);
        sc.setVisible(true);
        
        
    }//GEN-LAST:event_columnsJMenuItemActionPerformed

    private void exitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitJMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitJMenuItemActionPerformed

    private void timeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeJTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //mainView mv = new mainView();
                //mv.init();
               // mv.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem NewJMenuItem;
    private javax.swing.JMenuItem OpenJMenuItem;
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JButton autosalConnectJButton;
    private javax.swing.JButton autosalConnectJButtonWithIcon;
    private javax.swing.JButton calibrateJButton;
    private javax.swing.JMenuItem calibrateJMenuItem;
    private javax.swing.JMenuItem closeJMenuItem;
    private javax.swing.JMenuItem columnsJMenuItem;
    private javax.swing.JMenuItem communicationsJMenuItem;
    private javax.swing.JMenuItem communicationsLogJMenuItem;
    private javax.swing.JTextField dateJTextField;
    private javax.swing.JMenuItem enterBottleLabelJMenuItem;
    private javax.swing.JMenuItem enterCommentsJMenuItem;
    private javax.swing.JMenuItem exitJMenuItem;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JButton fileNewJButton;
    private javax.swing.JButton fileOpenJButton;
    private javax.swing.JTextField functionSwitchStatusJTextField;
    private javax.swing.JMenuItem generalJMenuItem;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JMenuItem licenseAgreementJMenuItem;
    private javax.swing.JMenu loggingJMenu;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JScrollPane mainJScrollPane;
    private javax.swing.JTable mainJTable;
    private javax.swing.JToolBar mainMenuJToolBar;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JButton printPageJButton;
    private javax.swing.JButton runDetailsJButton;
    private javax.swing.JMenuItem runDetailsJMenuItem;
    private javax.swing.JMenuBar salinometerJMenuBar;
    private javax.swing.JMenu settingsJMenu;
    private javax.swing.JMenuItem technicalHelpJMenuItem;
    private javax.swing.JTextField timeJTextField;
    // End of variables declaration//GEN-END:variables


    //declare variables here
    private TableColumnModel tcm;
    private TableColumn bottleLabel;
    

    void init(){
   
    tcm = mainJTable.getColumnModel();
    bottleLabel = tcm.getColumn(1);
   
    //tcm.removeColumn(bottleLabel);

    
    
    }//end init()


}
